{
	"info": {
		"_postman_id": "8ec3533f-d562-4775-aec7-0c966c16dee9",
		"name": "Alexey Kokorev, QAP-96, unit 8.7",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22696283"
	},
	"item": [
		{
			"name": "Get API Key",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const JSONData = pm.response.json();\r",
							"\r",
							"pm.test(\"Проверка наличия в ответе от сервера API Key\", function () {\r",
							"    pm.expect(JSONData).to.have.all.keys('key');\r",
							"});\r",
							"\r",
							"pm.test(\"Получаем API Key и сохраняем его в auth_key\", function () {\r",
							"        pm.collectionVariables.set(\"auth_key\", JSONData.key);\r",
							"});\r",
							"/*pm.test(\"Key is present in responseBody\", function () {\r",
							"    var jsonData = JSON.parse(responseBody);\r",
							"    pm.expect(jsonData).to.have.all.keys('key');\r",
							"    pm.collectionVariables.set(\"auth_key\", jsonData.key);\r",
							"});*/"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "email",
						"value": "{{auth_email}}",
						"type": "text"
					},
					{
						"key": "password",
						"value": "{{auth_pasword}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}key",
					"host": [
						"{{base_url}}key"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const JSONData = pm.response.json();\r",
							"\r",
							"/*pm.test(\"Проверка наличия в ответе от сервера имени животного\", function () {\r",
							"    pm.expect(JSONData).to.have.all.keys('name');\r",
							"});\r",
							"\r",
							"pm.test(\"Проверка наличия в ответе от сервера типа животного\", function () {\r",
							"    pm.expect(JSONData).to.have.all.keys('animal_type');\r",
							"});\r",
							"\r",
							"pm.test(\"Проверка наличия в ответе от сервера возраста животного\", function () {\r",
							"    pm.expect(JSONData).to.have.all.keys('age');\r",
							"});*/\r",
							"\r",
							"pm.test(\"В теле ответа содержится имя животного\", function () {\r",
							"   pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"name\"));\r",
							"});pm.test(\"В теле ответа содержится тип животного\", function () {\r",
							"   pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"type\"));\r",
							"});pm.test(\"В теле ответа содержится возраст животного\", function () {\r",
							"   pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"age\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Получаем id животного и сохраняем его в переменную petid коллекции\", function () {\r",
							"        pm.collectionVariables.set(\"petid\", JSONData.id);\r",
							"});\r",
							"\r",
							"pm.test(\"Получаем имя (name) животного и сохраняем его в переменную name коллекции\", function () {\r",
							"        pm.collectionVariables.set(\"name\", JSONData.name);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "email",
						"value": "{{auth_email}}",
						"type": "text",
						"disabled": true
					},
					{
						"key": "password",
						"value": "{{auth_pasword}}",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "animal_type",
							"value": "{{type}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{base_url}}create_pet_simple",
					"host": [
						"{{base_url}}create_pet_simple"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change pet name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							" \r",
							"/*pm.test(\"Проверка наличия в ответе от сервера имени животного\", function () {\r",
							"    pm.expect(JSONData).to.have.all.keys('name');\r",
							"});\r",
							"\r",
							"pm.test(\"Проверка наличия в ответе от сервера типа животного\", function () {\r",
							"    pm.expect(JSONData).to.have.all.keys('animal_type');\r",
							"});\r",
							"\r",
							"pm.test(\"Проверка наличия в ответе от сервера возраста животного\", function () {\r",
							"    pm.expect(JSONData).to.have.all.keys('age');\r",
							"});*/\r",
							"\r",
							"pm.test(\"В теле ответа содержится имя животного\", function () {\r",
							"   var JSONData = pm.response.json();\r",
							"   pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"name\"));\r",
							"});\r",
							"pm.test(\"В теле ответа содержится тип животного\", function () {\r",
							"   var JSONData = pm.response.json();\r",
							"   pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"type\"));\r",
							"});\r",
							"pm.test(\"В теле ответа содержится возраст животного\", function () {\r",
							"   var JSONData = pm.response.json();\r",
							"   pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"age\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Проверка того, что новое имя питомца не равно старому\", function () {\r",
							"    var JSONData = pm.response.json();\r",
							"    pm.expect(pm.collectionVariables.get(\"name\")).to.not.eql(JSONData.name);\r",
							"});\r",
							"\r",
							"pm.test(\"Получаем измененное имя (name) животного и перезаписываеи переменную name коллекции\", function () {\r",
							"    var JSONData = pm.response.json();\r",
							"    pm.collectionVariables.set(\"name\", JSONData.name);  \r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "email",
						"value": "{{auth_email}}",
						"type": "text",
						"disabled": true
					},
					{
						"key": "password",
						"value": "{{auth_pasword}}",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{pet_name_to_change}}",
							"description": "Новое имя питомца для замены",
							"type": "text"
						},
						{
							"key": "animal_type",
							"value": "{{type}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{base_url}}pets/{{petid}}",
					"host": [
						"{{base_url}}pets"
					],
					"path": [
						"{{petid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get my pets and check added pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const JSONData = pm.response.json();\r",
							"\r",
							"pm.test(\"Проверка того, что новое имя питомца, измененного PUT-запросом, совпадает с переменной name коллекции\", function () {\r",
							"    pm.expect(pm.collectionVariables.get(\"name\")).to.eql(JSONData.pets[0].name);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{base_url}}pets?filter=my_pets",
					"host": [
						"{{base_url}}pets"
					],
					"query": [
						{
							"key": "filter",
							"value": "my_pets"
						}
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "{{auth_key}}",
				"type": "string"
			},
			{
				"key": "key",
				"value": "auth_key",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Status code is 200\", function () {",
					"    pm.response.to.have.status(200);",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "auth_key",
			"value": "",
			"type": "string"
		},
		{
			"key": "base_url",
			"value": "https://petfriends.skillfactory.ru/api/",
			"type": "string"
		},
		{
			"key": "name",
			"value": "",
			"type": "string"
		},
		{
			"key": "type",
			"value": "",
			"type": "string"
		},
		{
			"key": "age",
			"value": "",
			"type": "string"
		},
		{
			"key": "petid",
			"value": "",
			"type": "string"
		},
		{
			"key": "auth_email",
			"value": "koks79@list.ru",
			"type": "string"
		},
		{
			"key": "auth_pasword",
			"value": "12345",
			"type": "string"
		},
		{
			"key": "pet_name_to_change",
			"value": "",
			"type": "string"
		},
		{
			"value": "",
			"type": "string",
			"disabled": true
		}
	]
}